/**
* mobilegateway API generated from mobilegateway.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */

/*
* MobilegatewayApiImpl.h
*
*
*/

#pragma once


#include <memory>
#include <map>
#include <mutex>
#include "../Mobilegateway.h"

#include "ArpTableJsonObject.h"
#include "BaseStationJsonObject.h"
#include "MobilegatewayJsonObject.h"
#include "PortsJsonObject.h"
#include "PortsSecondaryipJsonObject.h"
#include "RouteJsonObject.h"
#include "UserEquipmentJsonObject.h"
#include <vector>

namespace polycube {
namespace service {
namespace api {

using namespace polycube::service::model;

namespace MobilegatewayApiImpl {
  void create_mobilegateway_arp_table_by_id(const std::string &name, const std::string &address, const ArpTableJsonObject &value);
  void create_mobilegateway_arp_table_list_by_id(const std::string &name, const std::vector<ArpTableJsonObject> &value);
  void create_mobilegateway_base_station_by_id(const std::string &name, const std::string &ip, const BaseStationJsonObject &value);
  void create_mobilegateway_base_station_list_by_id(const std::string &name, const std::vector<BaseStationJsonObject> &value);
  void create_mobilegateway_by_id(const std::string &name, const MobilegatewayJsonObject &value);
  void create_mobilegateway_ports_by_id(const std::string &name, const std::string &portsName, const PortsJsonObject &value);
  void create_mobilegateway_ports_list_by_id(const std::string &name, const std::vector<PortsJsonObject> &value);
  void create_mobilegateway_ports_secondaryip_by_id(const std::string &name, const std::string &portsName, const std::string &ip, const PortsSecondaryipJsonObject &value);
  void create_mobilegateway_ports_secondaryip_list_by_id(const std::string &name, const std::string &portsName, const std::vector<PortsSecondaryipJsonObject> &value);
  void create_mobilegateway_route_by_id(const std::string &name, const std::string &network, const std::string &nexthop, const RouteJsonObject &value);
  void create_mobilegateway_route_list_by_id(const std::string &name, const std::vector<RouteJsonObject> &value);
  void create_mobilegateway_user_equipment_by_id(const std::string &name, const std::string &ip, const UserEquipmentJsonObject &value);
  void create_mobilegateway_user_equipment_list_by_id(const std::string &name, const std::vector<UserEquipmentJsonObject> &value);
  void delete_mobilegateway_arp_table_by_id(const std::string &name, const std::string &address);
  void delete_mobilegateway_arp_table_list_by_id(const std::string &name);
  void delete_mobilegateway_base_station_by_id(const std::string &name, const std::string &ip);
  void delete_mobilegateway_base_station_list_by_id(const std::string &name);
  void delete_mobilegateway_by_id(const std::string &name);
  void delete_mobilegateway_ports_by_id(const std::string &name, const std::string &portsName);
  void delete_mobilegateway_ports_list_by_id(const std::string &name);
  void delete_mobilegateway_ports_secondaryip_by_id(const std::string &name, const std::string &portsName, const std::string &ip);
  void delete_mobilegateway_ports_secondaryip_list_by_id(const std::string &name, const std::string &portsName);
  void delete_mobilegateway_route_by_id(const std::string &name, const std::string &network, const std::string &nexthop);
  void delete_mobilegateway_route_list_by_id(const std::string &name);
  void delete_mobilegateway_user_equipment_by_id(const std::string &name, const std::string &ip);
  void delete_mobilegateway_user_equipment_list_by_id(const std::string &name);
  ArpTableJsonObject read_mobilegateway_arp_table_by_id(const std::string &name, const std::string &address);
  std::string read_mobilegateway_arp_table_interface_by_id(const std::string &name, const std::string &address);
  std::vector<ArpTableJsonObject> read_mobilegateway_arp_table_list_by_id(const std::string &name);
  std::string read_mobilegateway_arp_table_mac_by_id(const std::string &name, const std::string &address);
  BaseStationJsonObject read_mobilegateway_base_station_by_id(const std::string &name, const std::string &ip);
  std::vector<BaseStationJsonObject> read_mobilegateway_base_station_list_by_id(const std::string &name);
  MobilegatewayJsonObject read_mobilegateway_by_id(const std::string &name);
  std::vector<MobilegatewayJsonObject> read_mobilegateway_list_by_id();
  PortsJsonObject read_mobilegateway_ports_by_id(const std::string &name, const std::string &portsName);
  PortsDirectionEnum read_mobilegateway_ports_direction_by_id(const std::string &name, const std::string &portsName);
  std::string read_mobilegateway_ports_ip_by_id(const std::string &name, const std::string &portsName);
  std::vector<PortsJsonObject> read_mobilegateway_ports_list_by_id(const std::string &name);
  std::string read_mobilegateway_ports_mac_by_id(const std::string &name, const std::string &portsName);
  PortsSecondaryipJsonObject read_mobilegateway_ports_secondaryip_by_id(const std::string &name, const std::string &portsName, const std::string &ip);
  std::vector<PortsSecondaryipJsonObject> read_mobilegateway_ports_secondaryip_list_by_id(const std::string &name, const std::string &portsName);
  RouteJsonObject read_mobilegateway_route_by_id(const std::string &name, const std::string &network, const std::string &nexthop);
  std::string read_mobilegateway_route_interface_by_id(const std::string &name, const std::string &network, const std::string &nexthop);
  std::vector<RouteJsonObject> read_mobilegateway_route_list_by_id(const std::string &name);
  uint32_t read_mobilegateway_route_pathcost_by_id(const std::string &name, const std::string &network, const std::string &nexthop);
  UserEquipmentJsonObject read_mobilegateway_user_equipment_by_id(const std::string &name, const std::string &ip);
  std::vector<UserEquipmentJsonObject> read_mobilegateway_user_equipment_list_by_id(const std::string &name);
  uint64_t read_mobilegateway_user_equipment_rate_limit_by_id(const std::string &name, const std::string &ip);
  uint32_t read_mobilegateway_user_equipment_teid_by_id(const std::string &name, const std::string &ip);
  std::string read_mobilegateway_user_equipment_tunnel_endpoint_by_id(const std::string &name, const std::string &ip);
  void replace_mobilegateway_arp_table_by_id(const std::string &name, const std::string &address, const ArpTableJsonObject &value);
  void replace_mobilegateway_arp_table_list_by_id(const std::string &name, const std::vector<ArpTableJsonObject> &value);
  void replace_mobilegateway_base_station_by_id(const std::string &name, const std::string &ip, const BaseStationJsonObject &value);
  void replace_mobilegateway_base_station_list_by_id(const std::string &name, const std::vector<BaseStationJsonObject> &value);
  void replace_mobilegateway_by_id(const std::string &name, const MobilegatewayJsonObject &value);
  void replace_mobilegateway_ports_by_id(const std::string &name, const std::string &portsName, const PortsJsonObject &value);
  void replace_mobilegateway_ports_list_by_id(const std::string &name, const std::vector<PortsJsonObject> &value);
  void replace_mobilegateway_ports_secondaryip_by_id(const std::string &name, const std::string &portsName, const std::string &ip, const PortsSecondaryipJsonObject &value);
  void replace_mobilegateway_ports_secondaryip_list_by_id(const std::string &name, const std::string &portsName, const std::vector<PortsSecondaryipJsonObject> &value);
  void replace_mobilegateway_route_by_id(const std::string &name, const std::string &network, const std::string &nexthop, const RouteJsonObject &value);
  void replace_mobilegateway_route_list_by_id(const std::string &name, const std::vector<RouteJsonObject> &value);
  void replace_mobilegateway_user_equipment_by_id(const std::string &name, const std::string &ip, const UserEquipmentJsonObject &value);
  void replace_mobilegateway_user_equipment_list_by_id(const std::string &name, const std::vector<UserEquipmentJsonObject> &value);
  void update_mobilegateway_arp_table_by_id(const std::string &name, const std::string &address, const ArpTableJsonObject &value);
  void update_mobilegateway_arp_table_interface_by_id(const std::string &name, const std::string &address, const std::string &value);
  void update_mobilegateway_arp_table_list_by_id(const std::string &name, const std::vector<ArpTableJsonObject> &value);
  void update_mobilegateway_arp_table_mac_by_id(const std::string &name, const std::string &address, const std::string &value);
  void update_mobilegateway_base_station_by_id(const std::string &name, const std::string &ip, const BaseStationJsonObject &value);
  void update_mobilegateway_base_station_list_by_id(const std::string &name, const std::vector<BaseStationJsonObject> &value);
  void update_mobilegateway_by_id(const std::string &name, const MobilegatewayJsonObject &value);
  void update_mobilegateway_list_by_id(const std::vector<MobilegatewayJsonObject> &value);
  void update_mobilegateway_ports_by_id(const std::string &name, const std::string &portsName, const PortsJsonObject &value);
  void update_mobilegateway_ports_direction_by_id(const std::string &name, const std::string &portsName, const PortsDirectionEnum &value);
  void update_mobilegateway_ports_ip_by_id(const std::string &name, const std::string &portsName, const std::string &value);
  void update_mobilegateway_ports_list_by_id(const std::string &name, const std::vector<PortsJsonObject> &value);
  void update_mobilegateway_ports_mac_by_id(const std::string &name, const std::string &portsName, const std::string &value);
  void update_mobilegateway_ports_secondaryip_by_id(const std::string &name, const std::string &portsName, const std::string &ip, const PortsSecondaryipJsonObject &value);
  void update_mobilegateway_ports_secondaryip_list_by_id(const std::string &name, const std::string &portsName, const std::vector<PortsSecondaryipJsonObject> &value);
  void update_mobilegateway_route_by_id(const std::string &name, const std::string &network, const std::string &nexthop, const RouteJsonObject &value);
  void update_mobilegateway_route_list_by_id(const std::string &name, const std::vector<RouteJsonObject> &value);
  void update_mobilegateway_route_pathcost_by_id(const std::string &name, const std::string &network, const std::string &nexthop, const uint32_t &value);
  void update_mobilegateway_user_equipment_by_id(const std::string &name, const std::string &ip, const UserEquipmentJsonObject &value);
  void update_mobilegateway_user_equipment_list_by_id(const std::string &name, const std::vector<UserEquipmentJsonObject> &value);
  void update_mobilegateway_user_equipment_rate_limit_by_id(const std::string &name, const std::string &ip, const uint64_t &value);
  void update_mobilegateway_user_equipment_teid_by_id(const std::string &name, const std::string &ip, const uint32_t &value);
  void update_mobilegateway_user_equipment_tunnel_endpoint_by_id(const std::string &name, const std::string &ip, const std::string &value);

  /* help related */
  std::vector<nlohmann::fifo_map<std::string, std::string>> read_mobilegateway_arp_table_list_by_id_get_list(const std::string &name);
  std::vector<nlohmann::fifo_map<std::string, std::string>> read_mobilegateway_base_station_list_by_id_get_list(const std::string &name);
  std::vector<nlohmann::fifo_map<std::string, std::string>> read_mobilegateway_list_by_id_get_list();
  std::vector<nlohmann::fifo_map<std::string, std::string>> read_mobilegateway_ports_list_by_id_get_list(const std::string &name);
  std::vector<nlohmann::fifo_map<std::string, std::string>> read_mobilegateway_ports_secondaryip_list_by_id_get_list(const std::string &name, const std::string &portsName);
  std::vector<nlohmann::fifo_map<std::string, std::string>> read_mobilegateway_route_list_by_id_get_list(const std::string &name);
  std::vector<nlohmann::fifo_map<std::string, std::string>> read_mobilegateway_user_equipment_list_by_id_get_list(const std::string &name);

}
}
}
}

