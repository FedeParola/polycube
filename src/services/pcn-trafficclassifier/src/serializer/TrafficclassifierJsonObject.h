/**
* trafficclassifier API generated from trafficclassifier.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */

/*
* TrafficclassifierJsonObject.h
*
*
*/

#pragma once


#include "JsonObjectBase.h"

#include <vector>
#include "TrafficClassJsonObject.h"
#include "polycube/services/cube.h"

namespace polycube {
namespace service {
namespace model {


/// <summary>
///
/// </summary>
class  TrafficclassifierJsonObject : public JsonObjectBase {
public:
  TrafficclassifierJsonObject();
  TrafficclassifierJsonObject(const nlohmann::json &json);
  ~TrafficclassifierJsonObject() final = default;
  nlohmann::json toJson() const final;


  /// <summary>
  /// Name of the trafficclassifier service
  /// </summary>
  std::string getName() const;
  void setName(std::string value);
  bool nameIsSet() const;

  /// <summary>
  /// Traffic class identified by id
  /// </summary>
  const std::vector<TrafficClassJsonObject>& getTrafficClass() const;
  void addTrafficClass(TrafficClassJsonObject value);
  bool trafficClassIsSet() const;
  void unsetTrafficClass();

private:
  std::string m_name;
  bool m_nameIsSet;
  std::vector<TrafficClassJsonObject> m_trafficClass;
  bool m_trafficClassIsSet;
};

}
}
}

