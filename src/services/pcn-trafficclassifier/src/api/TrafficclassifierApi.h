/**
* trafficclassifier API generated from trafficclassifier.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */

/*
* TrafficclassifierApi.h
*
*/

#pragma once

#define POLYCUBE_SERVICE_NAME "trafficclassifier"


#include "polycube/services/response.h"
#include "polycube/services/shared_lib_elements.h"

#include "TrafficClassJsonObject.h"
#include "TrafficclassifierJsonObject.h"
#include <vector>


#ifdef __cplusplus
extern "C" {
#endif

Response create_trafficclassifier_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_trafficclassifier_traffic_class_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_trafficclassifier_traffic_class_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response delete_trafficclassifier_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_trafficclassifier_traffic_class_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_trafficclassifier_traffic_class_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_trafficclassifier_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_trafficclassifier_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_trafficclassifier_traffic_class_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_trafficclassifier_traffic_class_dmac_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_trafficclassifier_traffic_class_dport_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_trafficclassifier_traffic_class_dstip_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_trafficclassifier_traffic_class_ethtype_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_trafficclassifier_traffic_class_l4proto_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_trafficclassifier_traffic_class_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_trafficclassifier_traffic_class_priority_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_trafficclassifier_traffic_class_smac_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_trafficclassifier_traffic_class_sport_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_trafficclassifier_traffic_class_srcip_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response replace_trafficclassifier_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_trafficclassifier_traffic_class_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_trafficclassifier_traffic_class_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_trafficclassifier_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_trafficclassifier_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_trafficclassifier_traffic_class_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_trafficclassifier_traffic_class_dmac_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_trafficclassifier_traffic_class_dport_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_trafficclassifier_traffic_class_dstip_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_trafficclassifier_traffic_class_ethtype_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_trafficclassifier_traffic_class_l4proto_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_trafficclassifier_traffic_class_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_trafficclassifier_traffic_class_priority_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_trafficclassifier_traffic_class_smac_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_trafficclassifier_traffic_class_sport_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_trafficclassifier_traffic_class_srcip_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);

Response trafficclassifier_list_by_id_help(const char *name, const Key *keys, size_t num_keys);
Response trafficclassifier_traffic_class_list_by_id_help(const char *name, const Key *keys, size_t num_keys);


#ifdef __cplusplus
}
#endif

